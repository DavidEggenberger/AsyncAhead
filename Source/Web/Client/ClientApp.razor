@using global::Web.Client
@using global::Web.Client.Layouts


<Web.Web.Client.BuildingBlocks.Wrappers.ExceptionHandlingWrapper>
    <CascadingAuthenticationState>
        <Web.Web.Client.BuildingBlocks.Wrappers.AuthCascadingWrapper>
            <Web.Web.Client.BuildingBlocks.Wrappers.TenantCascadingWrapper>
                    <Web.Web.Client.BuildingBlocks.Wrappers.NotificationWrapper>
                        <CascadingBlazoredModal>
                            <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="@true">
                                <Found Context="routeData">
                                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                                        <NotAuthorized>
                                            @if (!context.User.Identity.IsAuthenticated)
                                            {
                                                <RedirectToLogin />
                                            }
                                            else
                                            {
                                                <p>You are not authorized to access this resource.</p>
                                            }
                                        </NotAuthorized>
                                    </AuthorizeRouteView>
                                </Found>
                                <NotFound>
                                    <LayoutView Layout="@typeof(MainLayout)">
                                        <p>Sorry, there's nothing at this address.</p>
                                    </LayoutView>
                                </NotFound>
                            </Router>
                        </CascadingBlazoredModal>  
                    </Web.Web.Client.BuildingBlocks.Wrappers.NotificationWrapper>         
            </Web.Web.Client.BuildingBlocks.Wrappers.TenantCascadingWrapper>    
        </Web.Web.Client.BuildingBlocks.Wrappers.AuthCascadingWrapper>
    </CascadingAuthenticationState>
</Web.Web.Client.BuildingBlocks.Wrappers.ExceptionHandlingWrapper>



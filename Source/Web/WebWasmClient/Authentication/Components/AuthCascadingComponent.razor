<CascadingValue Value="User">
    <CascadingValue Value="Team">
        @if(User != null)
        {
            @ChildContent
        }
    </CascadingValue>
</CascadingValue>

@code{
    [Parameter]
    public RenderFragment ChildContent { get; set; }
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }
    [Inject]
    public HostAuthenticationStateProvider authenticationStateProvider { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        await Task.Delay(200);
        User = (await AuthenticationState).User;
        if (!User.Identity.IsAuthenticated)
        {
            authenticationStateProvider.SignIn();
        }
        if(User.HasClaim(c => c.Type == "TeamId"))
        {
            try
            {
                Team = await httpClientService.GetFromAPI<TeamDTO>("/team");
            }
            catch(Exception ex)
            {
            
            }
        }   
    }
}

@attribute [Authorize]
@inherits LayoutComponentBase
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager

<div class="page">
    <CustomErrorBoundary @ref="errorBoundary">
        <ChildContent>
            <aside>
                <div class="CurrentTenantDisplayComponentContainer">
                    <SelectedTeamDisplayComponent/>
                </div>
                <NavMenu/>
            </aside>
            <main>
                <nav>
                    <div class="Filler"></div>
                    <div class="LogoContainer">
                        <div>
                            <a href="/">
                                <h1>AsyncAnalytics</h1>
                            </a>
                        </div>    
                    </div>
                    <div class="ProfileContainer">
                        <div>
                            <ProfileComponent/>
                        </div>
                    </div>
                </nav>
                <div class="Body">
                    @Body
                </div>
            </main>
        </ChildContent>
        <ErrorContent Context="Exception">
            <div class="ExceptionAlert">
                <h3>@Exception.GetType()</h3>
                <h3>@Exception.Message</h3>
                <button class="btn btn-info" @onclick="() => errorBoundary.Recover()">Clear</button>
            </div>
        </ErrorContent>
    </CustomErrorBoundary>
</div>

@code{
    private CustomErrorBoundary errorBoundary;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeVoidAsync("hideLoadingScreen");
        }
    }
}

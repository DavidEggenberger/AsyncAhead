@inject HttpClientService httpClientService

<div class="NavMenuContainer">
    <NavLink href="/" Match="NavLinkMatch.All" class="NavElement">
        <h3>Dashboard</h3>
    </NavLink>
    <NavLink href="/Notifications" Match="NavLinkMatch.Prefix" class="NavElement">
        <h3>Notifications</h3>
    </NavLink>
    <NavLink href="/Integrations" Match="NavLinkMatch.Prefix" class="NavElement">
        <h3>Integrations</h3>
    </NavLink>
    <div class="NavElement NoUnderline">
        <TeamsOverviewComponent/>
    </div>
    @if(User.IsInRole("Admin"))
    {
        <div class="NavElement">
            <h3 @onclick='() => navigationManager.NavigateTo("/Identity/TeamManagement/Plan", true)'>Manage @currentTenant.Name</h3>
        </div>
    }
    <div class="NavElement">
        <h3 @onclick="() => Modal.Show<CreateTeamModalComponent>()">Create New Team</h3>
    </div>
</div>

@code{
    [CascadingParameter] public IModalService Modal { get; set; }
    [CascadingParameter] public TeamDTO SelectedTeam { get; set; }
    [CascadingParameter] public ClaimsPrincipal User { get; set; }
    [Parameter] public EventCallback<TeamDTO> SelectedTeamLoaded { get; set; }

    private TeamDTO currentTenant;
    protected override async Task OnInitializedAsync()
    {
        currentTenant = await httpClientService.GetFromAPI<TeamDTO>("/team/current");
        if (SelectedTeamLoaded.HasDelegate)
        {
            await SelectedTeamLoaded.InvokeAsync(currentTenant);
        }
    }
}
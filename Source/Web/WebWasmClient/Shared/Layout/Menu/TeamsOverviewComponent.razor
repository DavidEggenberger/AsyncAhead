@inject HttpClientService httpClientService
@inject NavigationManager navigationManager

<div class="GroupExpander" style="height: @(expanded ? "auto;" : "26.39px")">
    <div class="ExpanderTitle">
        <h5>Select Team</h5>
        @if (expanded)
        {
            <img class="ExpanderIcon Up" @onclick="() => Click()" src="/icons/angle-down.png"/>
        }
        else
        {
            <img class="ExpanderIcon" @onclick="() => Click()" src="/icons/angle-down.png"/>
        }
    </div>
    <div class="GroupOverview">
        @if (expanded)
        {
            if(teams == null)
            {
                <h5>Loading...</h5>
            }
            else if(teams.Count > 0)
            {
                foreach(var tenant in teams)
                {
                    if(tenant.Id == User.GetTeamId())
                    {
                        <div class="Group Selected">
                            <h6 @onclick='() => navigationManager.NavigateTo($"/api/team/select/{tenant.Id}", true)'>@tenant.Name</h6>
                        </div>
                    }
                    else
                    {
                        <div class="Group">
                            <h6>@tenant.Name</h6>
                            <button class="SelectTeamButton" @onclick='() => navigationManager.NavigateTo($"/api/team/select/{tenant.Id}", true)'>Select</button>
                        </div>
                    }       
                }
            }
            else
            {
                <div class="Group">
                    <h6>You are in no teams</h6>
                </div>
            }
        }
    </div>
</div>

@code{
    private List<TeamAuthenticationDTO> teams;
    protected override async Task OnInitializedAsync()
    {
        teams = await httpClientService.GetFromAPI<List<TeamAuthenticationDTO>>("/team/all");
    }
    private bool expanded = true;
    public void Click()
    {
        expanded = !expanded;
        StateHasChanged();
    }
}
